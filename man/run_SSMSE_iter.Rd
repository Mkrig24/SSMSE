% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runSSMSE.R
\name{run_SSMSE_iter}
\alias{run_SSMSE_iter}
\title{Run one iteration of an MSE using SS OM}
\usage{
run_SSMSE_iter(
  out_dir = NULL,
  OM_name = "cod",
  OM_in_dir = NULL,
  EM_name = NULL,
  EM_in_dir = NULL,
  run_EM_last_yr = FALSE,
  MS = "last_yr_catch",
  use_SS_boot = TRUE,
  nyrs = 100,
  nyrs_assess = 3,
  rec_dev_iter = NULL,
  impl_error = NULL,
  niter = 1,
  iter_seed = NULL,
  sample_struct = NULL,
  future_om_list = NULL,
  sample_struct_hist = NULL,
  interim_struct = NULL,
  verbose = FALSE
)
}
\arguments{
\item{out_dir}{The directory to which to write output. IF NULL, will default
to the working directory.}

\item{OM_name}{Name of a valid Stock Synthesis stock assessment model from
which to create the OM. Currently, valid inputs are: \code{"cod"} or NULL,
if using a custom model with path specified in \code{OM_in_dir}.}

\item{OM_in_dir}{Relative or absolute path to the operating model, if using a
model outside of the SSMSE package.}

\item{EM_name}{Should be NULL unless \code{MS = "EM"}. Name of a valid Stock
Synthesis stock assessment model to use as an EM. If the value of EM_name
is NULL and  \code{MS = "EM"}, then SSMSE will look for the estimation model
in the path specified in EM_in_dir. valid inputs for EM_name are: \code{"cod"}
 or \code{NULL}.}

\item{EM_in_dir}{Relative or absolute path to the estimation model, if using a
model outside of the SSMSE package. Note that this value should be NULL if
\code{MS} has a value other than "EM".}

\item{run_EM_last_yr}{Should the EM run in the last year if the last year
is an assessment year? TRUE/FALSE option, so the same for all scenarios and
iterations. Defaults to FALSE.}

\item{MS}{The management strategy to use. Current options
are:  \code{"last_yr_catch"} which uses the previous year's catch; 
\code{"no_catch"} which uses 0 catch; \code{"EM"} which uses an stock 
synthesis model as the estimation method and the management strategy as 
defined in the forecast file of the stock synthesis estimation method;
\code{"Interim"} to modify catch based on survey predictions between
assessments. Users can also specify their own managment strategies as an
function. To use the function, it must be available in the global
enviroment and specified by name in MS. For example, if the function is
called "my_ms" then the user should make it available in the global 
environment and specify MS = "my_ms".}

\item{use_SS_boot}{Should a bootstrapped data set generated by SS be used?
Defaults to TRUE.}

\item{nyrs}{Number of years beyond the years included in the OM to run the
MSE. A single integer value.}

\item{nyrs_assess}{The number of years between assessments. E.g., if an
assessment is conducted every 3 years, put 3 here. A single integer value.
(NOTE: we could make this more flexible by instead reading in a vector of
assessment years, so users could specify irregular numbers of yrs between
assessments.)}

\item{rec_dev_iter}{A recruitment deviation vector for the iteration.
Dimensions are nyrs_assess\*number of fleets \* number of seasons}

\item{impl_error}{An implementation error vector for the iteration.
Dimensions are nyrs_assess\*number of fleets \* number of seasons}

\item{niter}{The iteration number, which is also the name of the folder the
results will be written to.}

\item{iter_seed}{List containing fixed seeds for this iteration.}

\item{sample_struct}{A optional list including which years, seasons, and fleets
should be  added from the OM into the EM for different types of data.
If NULL, the data structure will try to be infered from the pattern found
for each of the datatypes within the EM datafiles. Include this strucutre
for the number of years to extend the model out. Note that the data should
be specified using the list component names and column names as in would be
used in \code{r4ss::SS_readdat()}. The run_SSMSE_iter function examples
give an example of what this structure should be. Running the function
create_sample_struct() will also produce a sample_struct object in the
correct form. Can be NULL only when MS is not EM.}

\item{future_om_list}{An optional list of lists including changes that should
be made after the end year of the input model. Each first level list element
outlines 1 change to be made to the operating model. To see an example, try
running \code{\link{create_future_om_list}}. Defaults to NULL, which implies
that the model will be extended forward in time assuming the original model
structure.}

\item{sample_struct_hist}{An optional list including which years should be
sampled for the historical period for the data generated from the OM. If 
this is left as NULL, then the same sampling scheme will be used as in the
OM's data file. If it is not NULL, then each year}

\item{interim_struct}{A optional list of parameters to control an interim
assessment with an example structure below, where Beta=a positive value
that is inversely proportional to risk, MA_years= the number of years to
average index observations of when calculating deviations, assess_freq=the
number of years between full assessments during with an interim assessment
will happen every year, and Index_weights is a vector of length n indexes
that weights all indexes for multi index inference.
interim_struct<-list(Beta = 1,
                     MA_years = 3,
                     assess_freq = 5,
                     Index_weights = rep(1, max(ref_index[, 3])))}

\item{verbose}{Want verbose output? Defaults to FALSE.}
}
\description{
High level function to run 1 iteration of a scenario for a management
strategy evaluation using Stock Synthesis as the Operating model.
}
\examples{
\dontrun{
# Create a temporary folder for the output
temp_path <- file.path(tempdir(), "run_SSMSE_iter-ex")
dir.create(temp_path)

# run 1 iteration and 1 scenario of SSMSE
run_SSMSE_iter(
  OM_name = "cod",
  MS = "no_catch",
  out_dir = temp_path,
  nyrs = 6,
  nyrs_assess = 3
)
unlink(file.path(temp_path, "1"), recursive = TRUE)
# run 1 iteration and 1 scenario of SSMSE using an EM.
run_SSMSE_iter(
  OM_name = "cod",
  MS = "EM",
  out_dir = temp_path,
  EM_name = "cod",
  nyrs = 6,
  nyrs_assess = 3,
  sample_struct = list(
    catch = data.frame(Yr = 101:106, Seas = 1, FltSvy = 1, SE = 0.05),
    CPUE = data.frame(Yr = c(102, 105), Seas = 7, FltSvy = 2, SE = 0.01),
    lencomp = data.frame(
      Yr = c(102, 105), Seas = 1, FltSvy = 1,
      Sex = 0, Part = 0, Nsamp = 100
    ),
    agecomp = data.frame(
      Yr = c(102, 105), Seas = 1, FltSvy = 2,
      Sex = 0, Part = 0, Ageerr = 1,
      Lbin_lo = -1, Lbin_hi = -1, Nsamp = 50
    )
  )
)
unlink(temp_path, recursive = TRUE)
}
}
\author{
Kathryn Doering & Nathan Vaughan
}
