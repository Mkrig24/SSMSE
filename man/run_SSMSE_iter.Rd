% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runSSMSE.R
\name{run_SSMSE_iter}
\alias{run_SSMSE_iter}
\title{Run an iteration of an MSE using SS OM}
\usage{
run_SSMSE_iter(OM_name = "cod", use_SS_boot = TRUE, EM_name = NULL,
  MS = "last_yr_catch", out_dir = NULL, nyrs = 100,
  nyrs_assess = 3, impl_error = NULL, niter = 1, verbose = FALSE)
}
\arguments{
\item{OM_name}{Name of a valid Stock Synthesis stock assessment model from 
which to create the OM. Currently, only allows models in the package, so 
valid inputs are: \code{"cod"}.}

\item{use_SS_boot}{Should a bootstrapped data set generated by SS be used? 
Defaults to TRUE.}

\item{EM_name}{Name of a valid Stock Synthesis stock assessment model to use
as an EM. If value is NULL, no EM will be run. Currently only allows models
in the package, so valid inputs are: \code{"cod"} or \code{NULL}.}

\item{MS}{The management strategy to use for this iteration. Options
currently are \code{"last_yr_catch"} which uses the previous year's catch 
and \code{"no_catch"} which uses 0 catch.
(Note that in the future there should be an option to use the management 
strategy from SS)}

\item{out_dir}{The directory to which to write output. IF NULL, will default
to the working directory.}

\item{nyrs}{Number of years beyond the years included in the OM to run the
MSE. A single integer value.}

\item{nyrs_assess}{The number of years between assessments. E.g., if an
assessment is conducted every 3 years, put 3 here. A single integer value.
(NOTE: we could make this more flexible by instead reading in a vector of
assessment years, so users could specify irregular numbers of yrs between
assessments.)}

\item{impl_error}{Future parameter to specify implementation error.}

\item{niter}{The iteration number}

\item{verbose}{Want verbose output? Defaults to FALSE.}
}
\description{
High level function to run 1 iteration of a scenario for a management 
strategy evaluation using Stock Synthesis as the Operating model
}
\examples{
\dontrun{
  # Create a temporary folder for the output and set the working directory:
  temp_path <- file.path(tempdir(), "run_SSMSE_iter-example")
  dir.create(temp_path, showWarnings = FALSE)
  wd <- getwd()
  setwd(temp_path)
  on.exit(setwd(wd), add = TRUE)
  # run 1 iteration and 1 scenario of SSMSE
  run_SSMSE_iter(OM_name = "cod", 
                 MS = "no_catch", 
                 out_dir = temp_path,
                 nyrs = 6, 
                 nyrs_assess = 3
                 )
   unlink(temp_path, recursive = TRUE) # clean up
 }
}
\author{
Kathryn Doering
}
