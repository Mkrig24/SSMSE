% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{create_scen_list}
\alias{create_scen_list}
\title{Create scen_list object to use in run_SSMSE function.}
\usage{
create_scen_list(
  scen_name_vec,
  out_dir_scen_vec = NULL,
  iter_list = NULL,
  OM_name_vec = NULL,
  OM_in_dir_vec = NULL,
  EM_name_vec = NULL,
  EM_in_dir_vec = NULL,
  MS_vec = NULL,
  use_SS_boot_vec = NULL,
  nyrs_vec = NULL,
  nyrs_assess_vec = NULL,
  dat_str_list = NULL
)
}
\arguments{
\item{scen_name_vec}{A vector containing names of the scenarios. Note that 
this vector should be of type character, but if it is not, it will be 
coerced to character.}

\item{out_dir_scen_vec}{The directory to which to write output. IF NULL, will 
default to the working directory and create subfolders for using the names
in scen_name_vec. If has only one path, will use this location and create 
subfolders for using the names in scen_name_vec. If has the same length as
scen_name_vec, will match up with the names in scen_name_vec and ad a
subfolder to each location using the names in scen_name_vec (this is mostly)
to help verify which scenarios were run.}

\item{iter_list}{A list of integers to refer each iteration of the scenario.
The length of this vector will be the number of iterations run for the 
scenario.}

\item{OM_name_vec}{Name of a valid Stock Synthesis stock assessment model from 
which to create the OM. Currently, only allows models in the package, so 
valid inputs are: \code{"cod"}.}

\item{OM_in_dir_vec}{Vector of relative or absolute paths to the operating 
model, if using a model outside of the SSMSE package.}

\item{EM_name_vec}{Should be NULL unless \code{MS = "EM"}. Name of a valid Stock
Synthesis stock assessment model to use as an EM. If the value of EM_name 
is NULL and  \code{MS = "EM"}, then SSMSE will look for the estimation model
in the path specified in EM_dir. valid inputs for EM_name are: \code{"cod"}
 or \code{NULL}.}

\item{EM_in_dir_vec}{Relative or absolute path to the estimation model, if using a 
model outside of the SSMSE package. Note that this value should be NULL if
\code{MS} has a value other than "EM".}

\item{MS_vec}{Vector of management strategies.}

\item{use_SS_boot_vec}{Should a bootstrapped data set generated by SS be used? 
Defaults to TRUE.}

\item{nyrs_vec}{Number of years beyond the years included in the OM to run the
MSE. A single integer value.}

\item{nyrs_assess_vec}{The number of years between assessments. E.g., if an
assessment is conducted every 3 years, put 3 here. A single integer value.
(NOTE: we could make this more flexible by instead reading in a vector of
assessment years, so users could specify irregular numbers of yrs between
assessments.)}

\item{dat_str_list}{A optional list of lists including which years, seasons, and fleets
should be  added from the OM into the EM for different types of data.
If NULL, the data structure will try to be infered from the pattern found 
for each of the datatypes within the EM datafiles. Include this strucutre
for the number of years to extend the model out.}

\item{impl_error_vec}{Future parameter to specify implementation error.}
}
\description{
Function to create parameter \code{scen_list} in 
\code{\link{run_SSMSE}}, but also could be used by users to construct their
list prior to using \code{\link{run_SSMSE}}. Note that there is no error 
checking in this function, so getting output does not insure that this output
can be used as input to run_SSMSE.
}
\examples{
scen_list <- create_scen_list(
               scen_name_vec = c("scen 1", "scen_2"),
               out_dir_scen_vec = file.path("path", "to", "dir"),
               iter_list = list(1:2, 5:7),
               OM_name_vec = "cod",
               OM_in_dir_vec = NULL,
               EM_name_vec = "cod",
               EM_in_dir_vec = NULL,
               MS_vec = "EM",
               use_SS_boot_vec = TRUE,
               nyrs_vec = 6,
               nyrs_assess_vec = 3,
               impl_error_vec = NULL,
               dat_str_list = NULL
                )
                
}
\author{
Kathryn Doering
}
