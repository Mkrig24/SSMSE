% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runSSMSE.R
\name{run_SSMSE}
\alias{run_SSMSE}
\title{run an MSE using SS OMs}
\usage{
run_SSMSE(
  scen_list = NULL,
  scen_name_vec = c("scen_1", "scen_2"),
  out_dir_scen_vec = NULL,
  iter_list = list(1:2, 3:4),
  OM_name_vec = "cod",
  OM_in_dir_vec = NULL,
  EM_name_vec = c(NA, "cod"),
  EM_in_dir_vec = NULL,
  MS_vec = c("no_catch", "EM"),
  use_SS_boot_vec = TRUE,
  nyrs_vec = 6,
  nyrs_assess_vec = 3,
  impl_error_vec = NULL,
  dat_str_list = NULL,
  verbose = FALSE
)
}
\arguments{
\item{scen_list}{A list containing the design for all scenarios and
iterations of the model. Each list component is named according to its 
scenario and contains a list of the other parameters below, asides from 
scen_name vec.
Contains columns for each of the parameters listed
below, except verbose. If a column is missing, its value is assumed to be 
null or NA, as appropriate. Note that all other inputs (except for verbose)
are ignored if scen_list is specified.}

\item{scen_name_vec}{A vector containing names of the scenarios. The each 
string will be a directory containing all the model runs for a scenario.s}

\item{out_dir_scen_vec}{The directory to which to write output. IF NULL, will 
default to the working directory.}

\item{iter_list}{A vector of integers to refer each iteration of the scenario.
The length of this vector will be the number of iterations run for the 
scenario.}

\item{OM_name_vec}{Name of a valid Stock Synthesis stock assessment model from 
which to create the OM. Currently, only allows models in the package, so 
valid inputs are: \code{"cod"}.}

\item{OM_in_dir_vec}{Vector of relative or absolute paths to the operating 
model, if using a model outside of the SSMSE package.}

\item{EM_name_vec}{Should be NULL unless \code{MS = "EM"}. Name of a valid Stock
Synthesis stock assessment model to use as an EM. If the value of EM_name 
is NULL and  \code{MS = "EM"}, then SSMSE will look for the estimation model
in the path specified in EM_in_dir. valid inputs for EM_name are: \code{"cod"}
 or \code{NULL}.}

\item{EM_in_dir_vec}{Relative or absolute path to the estimation model, if using
model outside of the SSMSE package. Note that this value should be NULL if
\code{MS} has a value other than "EM".}

\item{MS_vec}{Vector of management strategies.}

\item{use_SS_boot_vec}{Should a bootstrapped data set generated by SS be used? 
Defaults to TRUE.}

\item{nyrs_vec}{Number of years beyond the years included in the OM to run the
MSE. A single integer value.}

\item{nyrs_assess_vec}{The number of years between assessments. E.g., if an
assessment is conducted every 3 years, put 3 here. A single integer value.
(NOTE: This could be made more flexible by instead reading in a vector of
assessment years, so users could specify irregular numbers of yrs between
assessments.)}

\item{impl_error_vec}{Future parameter to specify implementation error.}

\item{dat_str_list}{A optional list of lists including which years, seasons,
and fleets should be  added from the OM into the EM for different types of 
data. If NULL, the data structure will try to be infered from the pattern
found for each of the datatypes within the EM datafiles. Include this
strucutre for the number of years to extend the model out.}

\item{verbose}{Want verbose output? Defaults to FALSE.}
}
\description{
High level function to run a management strategy evaluation using Stock
Synthesis as the Operating model(s)
}
\examples{
  \dontrun{
  my_dir <- file.path(tempdir(), "ex-run_SSMSE")
  dir.create(my_dir)
  # For the EM, use the specified data structure
  my_dat_str_list <- list(NULL,
                         list(
                           catch = data.frame(year = 101:106,
                                              seas = 1,
                                              fleet = 1),
                           CPUE = data.frame(year = c(102, 105),
                                             seas = 7,
                                             index = 2)
                            )
                        )
  # Use the default parameter values, except for the once specified.
  # Note that the scen_list, either specified or internally created in the 
  # function is returned.
  input_list <- run_SSMSE(out_dir_scen_vec = my_dir,
                          dat_str_list = my_dat_str_list)
  unlink(my_dir, recursive = TRUE)
 }
}
\author{
Kathryn Doering
}
